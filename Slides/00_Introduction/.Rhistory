7663-6350
7663-6250
6250*12+7663
6250*11+7663
6250*11+7663+9250
6250*10+7663+9250
6658*12
7075*12
86600-84900
1700/84900
6658*!2
6658*12
84900-79900
5000/79900
877*.8
877 - 702
prop.test(c(702*.58, 175*.40), c(702,175))
702 * 0.58
702 * 0.42
175*.4
175*.6
sqrt(0.58*.42/702 + .4*.6/175)
0.0415 * 1.96
143/302
111/181
q()
sqrt(.36*.64/1095)
1.96*.0145
.36+c(-1,1)*.0284
.0282*.8
1.96^2*.36*.64/.0226^2
.0227/1.96
sqrt(.5*.5/1200)
.1/.0144
a = c(rep(100,1000), rep(300,1000))
median(a)
mean(a)
b = c(a, 297, 299)
median(b)
mean(a)
702*.58
702*.52
175*.4
175*.6
(407+70)/(365+105)
(407+70)/(702+175)
cos(30)
cos(30)*10
10/cos(30)
?cos
10/cos(pi/6)
11.5^2-10^2
sqrt(11.5^2-10^2)
sqrt(10^2+6^2)
q()
set.seed(612)#
ipad = sample(1, 1:68)
ipad
?sample
set.seed(612)#
ipad = sample(1:68, 1)
ipad
?pchisq
pchisq(10, df = 6, lower.tail = FALSE)
141/478
141/478*176
504*(.6329,.3410,.0261)
504*c(.6329,.3410,.0261)
319+172+13
q()
3364.6/2
(338- 319)^2/ 319 + (136-172)^2/172 + (30-13)^2/13
9.88/3.24
9.88/3.24*.84
2.56*19.72
20.57-50.4832
q()
35-7.5
35-6.5
q()
vision = read.csv("http://stat.duke.edu/~mc301/data/vision.csv")
vision
dt(.975, 28)
qt(.975, 28)
q()
1909292-89082
89082/5
1820210/934
17816.4/1948.833
d = read.csv("http://bit.ly/chance_lahomes")
names(d)
headh(d)
head(d)
d = read.csv("http://stat.duke.edu/~mc301/data/class_survey.csv")
head(d)
d = read.csv("http://bit.ly/chance_weight")
head(d)
q()
0.6696 * 108.20 âˆ’ 171.14
0.6696 * 108.20 - 171.14
.67(9.41/10.37)
.67*(9.41/10.37)
79+.35*72+.43*30
8+11+19+26+7+5+8-20
?predict.lm
(21*31)/42
26.64 - 1.96*3.86
26.64 + 1.96*3.86
q()
library(shiny)
library(ggvis)
intall.packages("ggvis")
install.packages("ggvis")
install.packages("shiny")
library(shiny)
library(ggvis)
faithful %>%
ggvis(x = ~waiting) %>%
layer_histograms(binwidth = input_slider(min=1, max=20, value=11))
## Reactive properties
mtcars %>%
ggvis(x = ~wt, y = ~mpg) %>%
layer_points(
size := input_slider(10, 400, value=50, label="size"),
fill := input_select(c("red", "blue"), label="color")
)
## Reactive computation parameters
faithful %>%
ggvis(x = ~waiting) %>%
layer_histograms(binwidth = input_slider(min=1, max=20, value=11))
## Reactive computation parameters
faithful %>%
ggvis(x = ~waiting) %>%
layer_histograms(binwidth = input_slider(min=1, max=20, value=11))
## Reactive computation parameters
faithful %>%
ggvis(x = ~waiting) %>%
layer_histograms(binwidth = input_slider(min=1, max=20, value=11))
devtools::install_packages("rstudio/ggvis")
install.packages("devtools")
library("devtools")
devtools::install_packages("rstudio/ggvis")
install_github("rstudio/ggvis")
library("ggvis")
## Reactive computation parameters
faithful %>%
ggvis(x = ~waiting) %>%
layer_histograms(binwidth = input_slider(min=1, max=20, value=11))
mtcars %>%
ggvis(x = ~wt, y = ~mpg) %>%
layer_points(
size := input_slider(10, 400, value=50, label="size"),
fill := input_select(c("red", "blue"), label="color")
)
## Reactive data source
dat <- data.frame(time = 1:10, value = runif(10))
# Add a new data point every 2 seconds
ddat <- reactive({
invalidateLater(2000, NULL)
dat$time  <<- c(dat$time[-1], dat$time[length(dat$time)] + 1)
dat$value <<- c(dat$value[-1], runif(1))
dat
})
ddat %>% ggvis(x = ~time, y = ~value, key := ~time) %>%
layer_points() %>%
layer_paths()
all_values <- function(x) {
if(is.null(x)) return(NULL)
paste0(names(x), ": ", format(x), collapse = "<br />")
}
mtcars %>% ggvis(x = ~wt, y = ~mpg) %>%
layer_points() %>%
add_tooltip(all_values, "hover")
devtools::install_github("babynames","hadley")
library("babynames")
mine <- subset(babynames, name == "Mine")
garrett <- subset(babynames, name == "Garrett")
colin <- subset(babynames, name == "Colin")
qplot(year, n, data = names(), geom ="line", color = sex) + theme_bw()
library(ggplot2)
install.packages("ggplot2")
colin <- subset(babynames, name == "Colin")
qplot(year, n, data = garrett, geom ="line", color = sex) + theme_bw()
library(ggplot2)
qplot(year, n, data = garrett, geom ="line", color = sex) + theme_bw()
qplot(year, n, data = colin, geom ="line", color = sex) + theme_bw()
View(colin)
names(colin)
which.max(colin$n)
colin$year[ which.max(colin$n)]
sum(colin$n)
Here is a graph of the number of people named `r renderText({input$name})`.
View(colin)
Anybody ? there ???
???
Anybody ? there ???
?
Anybody ? there ???
?
""
Anybody ? there ???
?
"
""
Anybody ? there ???
?
""
588/2
q()
160+130+240+120
q()
6715.11/7
7216.67*12
7216.67*.06
(11/52)*(12/51)*(11/50)
(13/52)*(12/51)*(11/50)
(26/52)*(25/51)*(24/50)
1-(0.0129+0.1176)
0.0129*50
0.1176*25
0.65+2.94
(.65-3.59)^2
(2.94-3.59)^2
(0-3.59)^2
8.6436*.0219
/4225*/1176
.4225*.1176
12.8881*.8695
5+5+10+10+10+5+5+30+25
7.5+10+10+10+2.5+5+10+10+10+25
q()
75+69+88+93+95+54+87+88+27
676/9
75+69+88+93+95+54+87+88+64
713/9
a = c(75, 69, 88, 93, 95, 54, 87, 88, 27)
mean(a)
75+69+88+93+95+54+87+88+27
676/9
882.515 - c(-1,1) * 1.65 * 89.5758
882.515 + c(-1,1) * 1.65 * 89.5758
113 + 110 + 108
1 - ((347.68/480.25)*(50/49))
1 - ((339.47/480.25)*(50/48))
54/72
235/272
63/133
63/352
q()
440*.256
113+110+108
q()
load(url("http://bit.ly/dasi_gss_data"))
load(url("http://bit.ly/dasi_anes_data"))
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
setwd("~/Desktop/Teaching/Sta101_F14/Slides/(0) Introduction")
devtools::install_github(c("yihui/knitr", "rstudio/shiny"))
library("shiny")
library("knitr")
install.packages(png)
install.packages("png")
install.packages("grid")
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
sample(1:5, 1)
?sample
sample(1:5)
sample(1:5)
sample(1:5)
sample(1:5)
